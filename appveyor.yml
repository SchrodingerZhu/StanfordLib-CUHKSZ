version: 1.0.{build}

image:
  - Ubuntu
  - Visual Studio 2019
  - macos

for:
  - matrix:
      only:
        - image: Ubuntu

    environment:
      GENERATOR: "Unix Makefiles"
      EXTENTION: "so"

    install:
      - git submodule update --init --recursive
      - sudo add-apt-repository ppa:beineri/opt-qt-5.14.0-bionic
      - sudo apt-get update
      - sudo apt install -y make g++ xvfb qt514base qt514multimedia qt514declarative mesa-common-dev libglu1-mesa-dev

    build_script:
      - mkdir build
      - cd build
      - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/opt/qt514/lib/cmake && cmake --build . "-j$(nproc)"
      - xvfb-run ctest
      - cd ..
      - bash misc/generate-linux.sh
      - rm -rf dist
      - bash misc/generate-linux-static.sh

    artifacts:
      - path: "x86_64-linux-gcc.zip"
        name: "x86_64-linux-gcc.zip"
      - path: "x86_64-linux-gcc-static.zip"
        name: "x86_64-linux-gcc-static.zip"

  - matrix:
      only:
        - image: macos

    install:
      - git submodule update --init --recursive
      - brew install qt

    environment:
      LDFLAGS: "-L/usr/local/opt/qt/lib"
      CPPFLAGS: "-I/usr/local/opt/qt/include"
      Qt5Widgets_DIR: "/usr/local/opt/qt/lib/cmake/Qt5Widgets"
      Qt5Test_DIR: "/usr/local/opt/qt/lib/cmake/Qt5Test"
      Qt5Core_DIR: "/usr/local/opt/qt/lib/cmake/Qt5Core"
      Qt5_DIR: "/usr/local/opt/qt/lib/cmake"
      Qt5Concurrent_DIR: "/usr/local/opt/qt/lib/cmake/Qt5Concurrent"
      Qt5Gui_DIR: "/usr/local/opt/qt/lib/cmake/Qt5Gui"
      GENERATOR: "Unix Makefiles"
      EXTENTION: "dylib"

    build_script:
      - mkdir build
      - cd build
      - cmake .. -DCMAKE_BUILD_TYPE=Release && cmake --build . "-j$(nproc)"
      - ctest
      - cd ..
      - bash misc/generate-mac.sh
      - rm -rf dist
      - bash misc/generate-mac-static.sh

    artifacts:
      - path: "x86_64-darwin-clang-static.zip"
        name: "x86_64-darwin-clang-static.zip"
      - path: "x86_64-darwin-clang.zip"
        name: "x86_64-darwin-clang.zip"

  - matrix:
      only:
        - image: Visual Studio 2019

    install:
      - git submodule update --init --recursive
      - choco install zip
      - set PATH=C:\Qt\Tools\mingw730_64\bin;%PATH:C:\Program Files\Git\usr\bin;=%
      - set PATH=%Qt5_DIR%;%Qt5_DIR%\bin;%PATH%

    environment:
      Qt5_DIR: 'C:\Qt\5.13.2\mingw73_64'
      GENERATOR: "MinGW Makefiles"
      EXTENTION: "dll"
      LINUX_ONLY: "echo hi"
      ARCH: "x86_64"

    build_script:
      - ps: mkdir build
      - ps: cd build
      - cmake .. -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles"
      - cmake --build . --target -j%NUMBER_OF_PROCESSORS%
      - ctest
      - set PATH=C:\Program Files\Git\usr\bin;%PATH%
      - cd ..
      - bash misc/generate-win.sh
      - DEL /F/Q/S dist
      - bash misc/generate-win-static.sh

    artifacts:
      - path: "x86_64-windows-mingw_w64.zip"
        name: "x86_64-windows-mingw_w64.zip"
      - path: "x86_64-windows-mingw_w64-static.zip"
        name: "x86_64-windows-mingw_w64-static.zip"

deploy:
  release: 2020.1.1
  description: 'Release'
  provider: GitHub
  auth_token:
    secure: XN/mGc6ukR428vElOAYmlfXRjgQaaswHV0Q2kMgCF3RqgU0z+jDkqk03QCVDKtiQ # your encrypted token from GitHub
  artifact: x86_64-windows-mingw_w64.zip,x86_64-darwin-clang.zip,x86_64-linux-gcc.zip,x86_64-windows-mingw_w64-static.zip,x86_64-darwin-clang-static.zip,x86_64-linux-gcc-static.zip
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    APPVEYOR_REPO_TAG: true        # deploy on tag push only
